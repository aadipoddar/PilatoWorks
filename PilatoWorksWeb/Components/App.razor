<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<base href="/" />
	<link rel="stylesheet" href="@Assets["lib/bootstrap/dist/css/bootstrap.min.css"]" />
	<link rel="stylesheet" href="@Assets["app.css"]" />
	<link rel="stylesheet" href="@Assets["PilatoWorksWeb.styles.css"]" />
	<ImportMap />
	<link rel="icon" type="image/png" href="favicon.png" />
	<HeadOutlet @rendermode="InteractiveServer" />
	<link href="_content/Syncfusion.Blazor.Themes/tailwind3.css" rel="stylesheet" />
</head>

<body>
	<Routes @rendermode="InteractiveServer" />
	<script src="_framework/blazor.web.js"></script>
	<script src="_content/Syncfusion.Blazor.Core/scripts/syncfusion-blazor.min.js" type="text/javascript"></script>

	<script>
		function setCookie(name, value, hours) {
			const date = new Date();
			date.setTime(date.getTime() + (hours * 60 * 60 * 1000)); // Convert hours to milliseconds
			const expires = "expires=" + date.toUTCString();
			document.cookie = name + "=" + value + ";" + expires + ";path=/";
		}

		function getCookie(name) {
			const cookieName = name + "=";
			const decodedCookie = decodeURIComponent(document.cookie);
			const cookies = decodedCookie.split(';');
			for (let i = 0; i < cookies.length; i++) {
				let cookie = cookies[i].trim();
				if (cookie.startsWith(cookieName)) {
					return cookie.substring(cookieName.length, cookie.length);
				}
			}
			return "";
		}

		function deleteCookie(name) {
			// Set cookie with past expiration date (standard way)
			document.cookie = name + '=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT';

			// Also try without domain specification
			document.cookie = name + '=; path=/; max-age=-99999999;';

			// If needed, also try with domain
			if (location.hostname.indexOf('.') !== -1) {
				// For domains with dots (e.g. example.com)
				const domain = location.hostname.split('.').slice(-2).join('.');
				document.cookie = name + '=; path=/; domain=.' + domain + '; expires=Thu, 01 Jan 1970 00:00:00 GMT';
			}
		}


		// Excel download functionality
		window.saveAs = function (base64String, filename) {
			const byteCharacters = atob(base64String);
			const byteArrays = [];

			// Convert the base64 string to byte array
			for (let i = 0; i < byteCharacters.length; i++) {
				byteArrays.push(byteCharacters.charCodeAt(i));
			}
			const byteArray = new Uint8Array(byteArrays);
			
			// Create a blob from the byte array
			const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
			
			// Create a download link and trigger the download
			const link = document.createElement('a');
			link.href = URL.createObjectURL(blob);
			link.download = filename;
			document.body.appendChild(link);
			link.click();
			document.body.removeChild(link);
			
			// Clean up the object URL
			setTimeout(() => {
				URL.revokeObjectURL(link.href);
			}, 100);
		};
	</script>
</body>

</html>
