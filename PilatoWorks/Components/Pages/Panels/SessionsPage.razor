@page "/Sessions"

<PageTitle>Sessions - Reflex and Reform Pilates</PageTitle>

<div class="sessions-container">
	<div class="sessions-overlay"></div>

	<!-- Header Section -->
	<div class="sessions-header">
		<div class="header-content">
			<div class="page-title">
				<svg class="page-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7v-5z" />
				</svg>
				<h1>Sessions</h1>
			</div>
			<div class="header-actions">
				<SfButton IconCss="e-icons e-arrow-left" CssClass="feature-button back-button" OnClick='() => NavManager.NavigateTo("/")' Content="Back to Dashboard" />
				<div class="voice-assistance-button" @onclick="OnVoiceAssistantClick">
					<div class="voice-icon-container">
						<div class="voice-icon">
							<div class="voice-wave-container">
								<div class="voice-wave"></div>
								<div class="voice-wave"></div>
								<div class="voice-wave"></div>
								<div class="voice-wave"></div>
							</div>
							<svg class="mic-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
								<path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5z" />
								<path d="M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z" />
							</svg>
						</div>
					</div>
					<span class="voice-button-text">Voice Assistance</span>
				</div>
				<SfButton IconCss="e-icons e-copy" CssClass="feature-button copy-button" OnClick="OnCopySessionsClick" Content="Copy Schedule" />
			</div>
		</div>
	</div>

	<!-- Main Content -->
	<div class="sessions-content">
		<div class="content-card date-selection-card">
			<div class="card-section">
				<h5 class="section-header">
					<svg class="section-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z" />
					</svg>
					Select Date
				</h5>
				<div class="section-content">
					<div class="date-selection-wrapper">
						<SfDatePicker TValue="DateOnly"
									  Placeholder="Select Session Date"
									  Value="_selectedDate"
									  CssClass="date-picker">
							<DatePickerEvents TValue="DateOnly" ValueChange="OnDateChanged" />
						</SfDatePicker>
						<div class="selected-date-info">
							<span class="date-label">Selected Date:</span>
							<span class="date-value">@_selectedDate.ToLongDateString()</span>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="content-card slots-card">
			<div class="card-section">
				<h5 class="section-header">
					<svg class="section-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z" />
					</svg>
					Time Slots &amp; Sessions
				</h5>

				<div class="section-content">
					<div class="slots-container">
						@foreach (var slot in _slots)
						{
							int totalSlots = _sessions.Where(s => s.SlotId == slot.Id).Count();
							int occupiedSlots = _sessions.Where(s => s.SlotId == slot.Id && s.Confirmed).Count();
							int availableSlots = slot.Max - occupiedSlots;
							bool hasExceededMax = totalSlots > slot.Max;

							string availabilityClass = hasExceededMax ? "low-availability" :
							availableSlots <= 0 ? "no-availability" :
							availableSlots <= 2 ? "limited-availability" :
							"full-availability";

							<div class="slot-card">
								<div class="slot-header @availabilityClass">
									<!-- Rest of the code remains unchanged -->
									<div class="slot-title">
										<h3>@slot.Name</h3>
									</div>
									<div class="slot-availability">
										<span class="availability-label">
											<svg class="availability-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
												<path d="M16.53 11.06L15.47 10l-4.88 4.88-2.12-2.12-1.06 1.06L10.59 17l5.94-5.94zM19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z" />
											</svg>
										</span>
										<span class="availability-count">@availableSlots / @slot.Max</span>
										@if (hasExceededMax)
										{
											<span class="overbooked">+@(totalSlots - slot.Max)</span>
										}
									</div>
									<div class="slot-actions">
										<SfButton CssClass="add-button" OnClick="@(() => CreateNewSessionClick(slot))">
											<svg class="add-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
												<path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
											</svg>
											Add Session
										</SfButton>
									</div>
								</div>

								<div class="slot-content">
									@if (!_sessions.Any(s => s.SlotId == slot.Id))
									{
										<div class="no-sessions">
											<svg class="empty-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
												<path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" />
											</svg>
											<span>No sessions scheduled for this time slot</span>
										</div>
									}
									else
									{
										<div class="sessions-grid">
											@foreach (var sessions in _sessions.Where(s => s.SlotId == slot.Id).GroupBy(s => s.SessionTypeId))
											{
												@foreach (var session in sessions)
												{
													var isGroupSession = session.SessionTypeName.ToLower().Contains("group");
													var sessionClass = isGroupSession ? "group-session" : "private-session";
													var subscription = _validSubs.FirstOrDefault(s => s.PersonId == session.PersonId);

													<div class="session-item @sessionClass" @onclick="@(() => OnSessionClick(session))">
														<div class="session-content">
															<div class="session-client">
																<span class="client-name">@session.PersonName</span>
																<span class="client-number">@session.PersonNumber</span>
															</div>
															<div class="session-type">
																<svg class="session-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																	<path d="@(isGroupSession ? "M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z" : "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z")" />
																</svg>
																<span>@session.SessionTypeName</span>
															</div>
															<div class="session-trainers">
																<svg class="trainer-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																	<path d="M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z" />
																</svg>
																<div class="trainer-names">
																	<span class="primary-trainer">@session.Trainer1Name</span>
																	@if (!string.IsNullOrEmpty(session.Trainer2Name))
																	{
																		<span class="co-trainer">+ @session.Trainer2Name</span>
																	}
																</div>
															</div>
															@if (subscription is not null)
															{
																<div class="session-subscription-info">
																	@if (subscription.Dues > 0)
																	{
																		<div class="subscription-detail">
																			<svg class="subscription-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																				<path d="M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z" />
																			</svg>

																			<span class="dues-pending">
																				@($"Dues : {subscription.Dues.FormatIndianCurrency()}")
																			</span>
																		</div>
																	}
																	<div class="subscription-detail">
																		<svg class="subscription-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																			<path d="M19 4h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20a2 2 0 002 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z" />
																		</svg>
																		<span class="renewal-date">
																			Renews: @subscription.SubscriptionValidTo.ToString("MMM dd, yyyy")
																		</span>
																	</div>
																</div>
															}
														</div>
														<div class="session-status">
															@if (session.Confirmed)
															{
																<div class="session-confirmed">
																	<svg class="confirmed-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																		<path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" />
																	</svg>
																</div>
															}
															else
															{
																<div class="session-unconfirmed">
																	<svg class="unconfirmed-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																		<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z" />
																	</svg>
																</div>
															}
														</div>
													</div>
												}
											}

											@if (availableSlots > 0)
											{
												@for (int i = 0; i < availableSlots; i++)
												{
													<div class="session-item empty-session" @onclick="@(() => CreateNewSessionClick(slot))">
														<div class="add-session">
															<svg class="add-session-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
																<path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
															</svg>
															<span>Add Session</span>
														</div>
													</div>
												}
											}
										</div>
									}
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Session Dialog -->
	<SfDialog IsModal="true" Width="450px" @bind-Visible="@_isSessionDialogVisible" CssClass="session-dialog">
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<svg class="dialog-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7v-5z" />
					</svg>
					<span>Session Details</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="dialog-info">
						<div class="info-date">
							<svg class="info-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
								<path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z" />
							</svg>
							<span>@_selectedDate.ToLongDateString()</span>
						</div>
						<div class="info-time">
							<svg class="info-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
								<path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z" />
							</svg>
							<span>@_selectedSlot?.Name</span>
						</div>
					</div>

					<div class="form-group">
						<label class="form-label">Client</label>
						<SfComboBox TValue="int"
									TItem="SubscriptionDetailsModel"
									Placeholder="Select a Client"
									DataSource="@_validSubs"
									@bind-Value="_selectedSession.SubscriptionId"
									CssClass="form-control">
							<ComboBoxTemplates TItem="SubscriptionDetailsModel" />
							<ComboBoxFieldSettings Value="SubscriptionId" Text="PersonName" />
						</SfComboBox>
					</div>

					<div class="form-group">
						<label class="form-label">Primary Trainer</label>
						<SfComboBox TValue="int"
									TItem="TrainerModel"
									Placeholder="Select a Trainer"
									DataSource="@_trainers"
									@bind-Value="_selectedSession.Trainer1Id"
									CssClass="form-control">
							<ComboBoxFieldSettings Value="Id" Text="Name" />
						</SfComboBox>
					</div>

					<div class="form-group">
						<label class="form-label">Co-Trainer (Optional)</label>
						<SfComboBox TValue="int?"
									TItem="TrainerModel"
									Placeholder="Select a Co-Trainer"
									DataSource="@_trainers"
									@bind-Value="_selectedSession.Trainer2Id"
									CssClass="form-control">
							<ComboBoxFieldSettings Value="Id" Text="Name" />
						</SfComboBox>
					</div>

					<div class="form-group checkbox-group">
						<SfCheckBox Label="Confirm Session" @bind-Checked="_selectedSession.Confirmed" CssClass="confirm-checkbox" />
					</div>
				</div>
			</Content>
		</DialogTemplates>
		<DialogButtons>
			@if (_selectedSession.Id > 0)
			{
				<DialogButton Content="Delete" OnClick="@DeleteSessionClick" CssClass="dialog-btn-delete" />
			}
			<DialogButton Content="Cancel" OnClick="@(() => _isSessionDialogVisible = false)" CssClass="dialog-btn-cancel" />
			<DialogButton Content="Save" IsPrimary="true" OnClick="@SessionDialogOkClick" CssClass="dialog-btn-save" />
		</DialogButtons>
	</SfDialog>

	<!-- Confirmation Dialog -->
	<SfDialog IsModal="true" Width="380px" @bind-Visible="@_isConfirmDialogVisible" CssClass="confirm-dialog">
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<svg class="dialog-icon warning" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z" />
					</svg>
					<span>Slot Maximum Exceeded</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<p>You have reached the maximum number of sessions for this time slot. Would you like to create additional sessions?</p>
				</div>
			</Content>
		</DialogTemplates>
		<DialogButtons>
			<DialogButton Content="Cancel" OnClick="@ConfirmDialogCancelClick" CssClass="dialog-btn-cancel" />
			<DialogButton Content="Create Additional" IsPrimary="true" OnClick="@ConfirmDialogOkClick" CssClass="dialog-btn-create" />
		</DialogButtons>
	</SfDialog>

	<!-- Copy Schedule Dialog -->
	<SfDialog IsModal="true" Width="400px" @bind-Visible="@_isCopyDialogVisible" CssClass="copy-dialog">
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<svg class="dialog-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z" />
					</svg>
					<span>Copy Schedule From Date</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<p>Select a source date to copy the schedule from:</p>
					<div class="form-group">
						<SfDatePicker TValue="DateOnly"
									  Placeholder="Select Source Date"
									  @bind-Value="_copySourceDate"
									  CssClass="form-control">
						</SfDatePicker>
					</div>
				</div>
			</Content>
		</DialogTemplates>
		<DialogButtons>
			<DialogButton Content="Cancel" OnClick="@(() => _isCopyDialogVisible = false)" CssClass="dialog-btn-cancel" />
			<DialogButton Content="Copy Schedule" IsPrimary="true" OnClick="@CopyScheduleClick" CssClass="dialog-btn-save" />
		</DialogButtons>
	</SfDialog>

	<!-- Not Inserted Sessions Dialog -->
	<SfDialog IsModal="true" Width="550px" @bind-Visible="@_isNotInsertedDialogVisible" CssClass="not-inserted-dialog">
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<svg class="dialog-icon warning" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z" />
					</svg>
					<span>Sessions Not Inserted</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<p class="info-message">The following sessions could not be inserted because their subscriptions are no longer valid:</p>

					@if (_notInsertedSessions.Any())
					{
						<div class="not-inserted-list">
							@foreach (var session in _notInsertedSessions)
							{
								<div class="not-inserted-item">
									<div class="not-inserted-header">
										<span class="not-inserted-client">@session.PersonName</span>
										<span class="not-inserted-time">@_slots.FirstOrDefault(s => s.Id == session.SlotId)?.Name</span>
									</div>
									<div class="not-inserted-details">
										<div class="not-inserted-type">
											<svg class="session-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
												<path d="@(session.SessionTypeName?.ToLower().Contains("group") == true ? "M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z" : "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z")" />
											</svg>
											<span>@session.SessionTypeName</span>
										</div>
										<div class="not-inserted-trainers">
											<svg class="trainer-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
												<path d="M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z" />
											</svg>
											<span>@session.Trainer1Name @(!string.IsNullOrEmpty(session.Trainer2Name) ? $"+ {session.Trainer2Name}" : "")</span>
										</div>
										<div class="reason-label">Reason: Subscription expired or not valid for this date</div>
									</div>
								</div>
							}
						</div>
					}
					else
					{
						<div class="no-sessions">
							<svg class="empty-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
								<path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" />
							</svg>
							<span>All sessions were successfully inserted</span>
						</div>
					}
				</div>
			</Content>
		</DialogTemplates>
		<DialogButtons>
			<DialogButton Content="Close" OnClick="@(() => _isNotInsertedDialogVisible = false)" CssClass="dialog-btn-cancel" />
		</DialogButtons>
	</SfDialog>

	<!-- Voice Assistant Dialog -->
	<SfDialog IsModal="true" Width="520px" @bind-Visible="@_showVoiceDialog" CssClass="voice-dialog">
		<DialogTemplates>
			<Header>
				<div class="dialog-header">
					<svg class="dialog-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5z" />
						<path d="M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z" />
					</svg>
					<span>Voice Assistance</span>
				</div>
			</Header>
			<Content>
				<div class="dialog-content">
					<div class="voice-dialog-body">
						<SfSpeechToText @bind-Transcript="@_transcript" />
						<SfTextArea RowCount="3" ColumnCount="50" @bind-Value="@_transcript" ResizeMode="Resize.None" Placeholder="Speak now, or type your query here..." CssClass="voice-transcript" />

						<div class="transcript-instructions">
							<p>Try saying something like:</p>
							<ul>
								<li>"Schedule a session for Sarah on June 25th at 10"</li>
								<li>"Book Michael for 20th March at 2 PM"</li>
							</ul>
						</div>
					</div>
				</div>
			</Content>
		</DialogTemplates>
		<DialogButtons>
			<DialogButton Content="Cancel" OnClick="@CloseVoiceDialog" CssClass="dialog-btn-cancel" />
			<DialogButton Content="Process Voice Command" IsPrimary="true" OnClick="@OnProcessTranscriptClick" CssClass="dialog-btn-save" />
		</DialogButtons>
	</SfDialog>

	<div class="sessions-footer">
		<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
	</div>
</div>

<style>
	:root {
		--primary-color: #3f51b5; /* Fitness blue/purple */
		--secondary-color: #8bc34a; /* Fresh green */
		--dark-color: #303030;
		--light-color: #f8f8f8;
		--accent-color: #ff5722; /* Energetic orange */
		--card-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
		/* Less saturated availability colors */
		--full-availability-color: rgba(76, 175, 80, 0.65); /* Less saturated green for completely available */
		--limited-availability-color: rgba(255, 193, 7, 0.65); /* Less saturated amber/yellow for less available */
		--no-availability-color: rgba(244, 67, 54, 0.65); /* Less saturated red for none available */
		--low-availability-color: rgba(183, 28, 28, 0.65); /* Less saturated dark red for exceeded */
	}

	body {
		margin: 0;
		padding: 0;
		font-family: 'Montserrat', 'Roboto', sans-serif;
	}

	.sessions-container {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
		background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%233f51b5" fill-opacity="0.1" d="M0,224L48,218.7C96,213,192,203,288,213.3C384,224,480,256,576,261.3C672,267,768,245,864,208C960,171,1056,117,1152,106.7C1248,96,1344,128,1392,144L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path></svg>'), url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%238bc34a" fill-opacity="0.1" d="M0,64L48,85.3C96,107,192,149,288,165.3C384,181,480,171,576,144C672,117,768,75,864,80C960,85,1056,139,1152,154.7C1248,171,1344,149,1392,138.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>');
		background-color: #f8f9fa;
		background-repeat: no-repeat;
		background-position: top, bottom;
		padding: 2rem;
		position: relative;
	}

	.sessions-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: url('data:image/svg+xml;utf8,<svg width="20" height="20" xmlns="http://www.w3.org/2000/svg"><rect width="20" height="20" fill="none" stroke="%23000" stroke-opacity="0.03" stroke-width="1"/></svg>');
		opacity: 0.5;
		pointer-events: none;
		z-index: 0;
	}

	/* Header Styles */
	.sessions-header {
		margin-bottom: 2rem;
		position: relative;
		z-index: 1;
	}

	.header-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.page-title {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.page-icon {
		width: 40px;
		height: 40px;
		color: var(--secondary-color);
		filter: drop-shadow(2px 2px 4px rgba(0,0,0,0.1));
	}

	.page-title h1 {
		margin: 0;
		font-size: 2rem;
		font-weight: 700;
		color: var(--dark-color);
	}

	.header-actions {
		display: flex;
		gap: 1rem;
	}

	.feature-button {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.5rem 1rem;
		border-radius: 50px;
		transition: all 0.3s ease;
	}

	.back-button {
		background-color: rgba(63, 81, 181, 0.85) !important;
		border-color: transparent !important;
		color: white !important;
		display: flex !important;
		align-items: center !important;
		gap: 0.5rem !important;
	}

		.back-button:hover {
			background-color: rgba(63, 81, 181, 0.95) !important;
			transform: translateY(-2px);
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
		}

	/* Voice Assistance Button Styles */
	.voice-assistance-button {
		display: inline-flex;
		align-items: center;
		gap: 0.8rem;
		background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
		border: none;
		color: white;
		padding: 0.7rem 1.8rem;
		border-radius: 50px;
		cursor: pointer;
		box-shadow: 0 6px 16px rgba(106, 17, 203, 0.2);
		transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
		position: relative;
		overflow: hidden;
	}

		.voice-assistance-button:hover {
			transform: translateY(-2px);
			box-shadow: 0 8px 20px rgba(106, 17, 203, 0.3);
		}

		.voice-assistance-button:active {
			transform: translateY(1px);
			box-shadow: 0 4px 12px rgba(106, 17, 203, 0.2);
		}

	.voice-icon-container {
		position: relative;
		width: 28px;
		height: 28px;
		border-radius: 50%;
		background: rgba(255, 255, 255, 0.15);
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 3px;
	}

	.voice-icon {
		position: relative;
		width: 100%;
		height: 100%;
	}

	.mic-icon {
		width: 100%;
		height: 100%;
		fill: white;
		position: relative;
		z-index: 2;
		filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.1));
	}

	.voice-button-text {
		font-weight: 600;
		font-size: 1rem;
		letter-spacing: 0.2px;
	}

	.voice-wave-container {
		position: absolute;
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.voice-wave {
		position: absolute;
		width: 100%;
		height: 100%;
		border-radius: 50%;
		border: 1.5px solid rgba(255, 255, 255, 0.5);
		transform: scale(0);
		opacity: 0;
		animation: pulse 2s infinite;
	}

		.voice-wave:nth-child(2) {
			animation-delay: 0.5s;
		}

		.voice-wave:nth-child(3) {
			animation-delay: 1s;
		}

		.voice-wave:nth-child(4) {
			animation-delay: 1.5s;
		}

	@@keyframes pulse {
		0% {
			transform: scale(0.5);
			opacity: 0;
		}

		50% {
			opacity: 0.2;
		}

		100% {
			transform: scale(1.8);
			opacity: 0;
		}
	}

	.copy-button {
		background-color: rgba(139, 195, 74, 0.85) !important;
		border-color: transparent !important;
	}

	.feature-button:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
	}

	/* Content Styles */
	.sessions-content {
		flex-grow: 1;
		position: relative;
		z-index: 1;
	}

	.content-card {
		background-color: white;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		overflow: hidden;
		margin-bottom: 2rem;
	}

	.card-section {
		padding: 1.5rem 2rem;
	}

	.section-header {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		margin: 0 0 1.25rem 0;
		font-size: 1.25rem;
		font-weight: 600;
		color: var(--dark-color);
	}

	.section-icon {
		width: 24px;
		height: 24px;
		color: var(--secondary-color);
	}

	.section-content {
		padding: 0.5rem 0;
	}

	.session-subscription-info {
		margin-top: 0.5rem;
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
		font-size: 0.8rem;
		color: #555;
		border-top: 1px dashed rgba(0, 0, 0, 0.1);
		padding-top: 0.5rem;
	}

	.subscription-detail {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.subscription-icon {
		width: 14px;
		height: 14px;
		fill: currentColor;
	}

	.dues-pending {
		color: #f44336;
		font-weight: 600;
	}

	.renewal-date {
		color: #555;
	}

	/* Date Selection */
	.date-selection-wrapper {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 1rem;
		max-width: 400px;
		margin: 0 auto;
	}

	.date-picker {
		width: 100%;
		max-width: 300px;
	}

	.selected-date-info {
		display: flex;
		gap: 0.75rem;
		align-items: center;
		padding: 0.75rem 1rem;
		background-color: rgba(139, 195, 74, 0.1);
		border-radius: 12px;
		border-left: 4px solid var(--secondary-color);
		width: 100%;
		max-width: 300px;
	}

	.date-label {
		font-weight: 600;
		color: var(--dark-color);
	}

	.date-value {
		color: #555;
	}

	/* Slots Styling */
	.slots-container {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.slot-card {
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
		border: 1px solid rgba(0, 0, 0, 0.08);
	}

	.slot-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1rem 1.5rem;
		border-top-left-radius: 12px;
		border-top-right-radius: 12px;
	}

	/* Availability colors */
	.no-availability {
		background-color: var(--no-availability-color);
		color: white;
	}

	.low-availability {
		background-color: var(--low-availability-color);
		color: white;
	}

	.limited-availability {
		background-color: var(--limited-availability-color);
		color: white;
	}

	.full-availability {
		background-color: var(--full-availability-color);
		color: white;
	}

	.slot-title h3 {
		margin: 0;
		font-size: 1.1rem;
		font-weight: 600;
	}

	.slot-availability {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.availability-icon {
		width: 18px;
		height: 18px;
		fill: currentColor;
	}

	.availability-count {
		font-weight: 600;
	}

	.overbooked {
		color: #ff1744;
		font-weight: 700;
		background: rgba(255, 255, 255, 0.25);
		padding: 0.15rem 0.4rem;
		border-radius: 12px;
	}

	.add-button {
		background: rgba(255, 255, 255, 0.25) !important;
		border: none !important;
		padding: 0.25rem 0.75rem !important;
		border-radius: 30px !important;
		display: flex !important;
		align-items: center !important;
		gap: 0.35rem !important;
		font-size: 0.85rem !important;
		font-weight: 600 !important;
		color: inherit !important;
	}

	.add-icon {
		width: 16px;
		height: 16px;
		fill: currentColor;
	}

	.slot-content {
		padding: 1.5rem;
		background-color: white;
	}

	.no-sessions {
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.75rem;
		padding: 1.5rem;
		color: #888;
		font-style: italic;
		background-color: rgba(0, 0, 0, 0.025);
		border-radius: 8px;
	}

	.empty-icon {
		width: 20px;
		height: 20px;
		fill: #aaa;
	}

	/* Sessions Grid */
	.sessions-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
		gap: 1rem;
	}

	.session-item {
		background-color: white;
		border-radius: 10px;
		padding: 1rem;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
		position: relative;
		cursor: pointer;
		transition: all 0.2s ease-in-out;
		border: 1px solid rgba(0, 0, 0, 0.08);
		display: flex;
		justify-content: space-between;
		min-height: 145px;
	}

		.session-item:hover {
			transform: translateY(-3px);
			box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
		}

	.session-content {
		flex-grow: 1;
	}

	.group-session {
		border-left: 4px solid #9c27b0;
	}

	.private-session {
		border-left: 4px solid #2196f3;
	}

	.session-client {
		display: flex;
		flex-direction: column;
		margin-bottom: 0.75rem;
	}

	.client-name {
		font-weight: 600;
		color: var(--dark-color);
		font-size: 0.95rem;
	}

	.client-number {
		color: #666;
		font-size: 0.8rem;
		margin-top: 2px;
	}

	.session-type {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		margin-bottom: 0.75rem;
		color: #555;
		font-size: 0.85rem;
	}

	.session-icon {
		width: 16px;
		height: 16px;
		fill: currentColor;
	}

	.session-trainers {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.trainer-icon {
		width: 16px;
		height: 16px;
		fill: #555;
	}

	.trainer-names {
		display: flex;
		flex-direction: column;
		font-size: 0.8rem;
	}

	.primary-trainer {
		color: #444;
	}

	.co-trainer {
		color: #777;
	}

	.session-status {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		padding-left: 8px;
	}

	.session-confirmed {
		color: #4caf50;
	}

	.session-unconfirmed {
		color: #f44336;
	}

	.confirmed-icon, .unconfirmed-icon {
		width: 18px;
		height: 18px;
		fill: currentColor;
	}

	.empty-session {
		background-color: rgba(139, 195, 74, 0.05);
		border: 1px dashed rgba(139, 195, 74, 0.5);
		display: flex;
		justify-content: center;
		align-items: center;
		min-height: 100px;
	}

	.add-session {
		display: flex;
		flex-direction: column;
		align-items: center;
		color: #8bc34a;
	}

	.add-session-icon {
		width: 24px;
		height: 24px;
		fill: currentColor;
		margin-bottom: 0.5rem;
	}

	/* Dialog Styling */
	.dialog-header {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		color: var(--dark-color);
		font-weight: 600;
	}

	.dialog-icon {
		width: 20px;
		height: 20px;
		fill: var(--secondary-color);
	}

		.dialog-icon.warning {
			fill: var(--accent-color);
		}

	.dialog-content {
		padding: 0.5rem 0;
	}

	.dialog-info {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		margin-bottom: 1.5rem;
		background-color: #f8f9fa;
		padding: 1rem;
		border-radius: 8px;
	}

	.info-date, .info-time {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: #555;
	}

	.info-icon {
		width: 16px;
		height: 16px;
		fill: var(--primary-color);
	}

	.form-group {
		margin-bottom: 1.25rem;
	}

	.form-label {
		display: block;
		margin-bottom: 0.5rem;
		font-weight: 600;
		color: var(--dark-color);
		font-size: 0.9rem;
	}

	.form-control {
		width: 100%;
		border-radius: 8px;
	}

	.checkbox-group {
		margin-top: 1rem;
	}

	.client-item {
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
		padding: 0.25rem 0;
	}

		.client-item .client-name {
			font-weight: 600;
		}

	.session-type {
		font-size: 0.85rem;
		color: #555;
	}

	.dialog-btn-cancel, .dialog-btn-save, .dialog-btn-create {
		min-width: 100px;
		border-radius: 30px;
		padding: 0.5rem 1.25rem;
	}

	.dialog-btn-save {
		background: var(--secondary-color) !important;
		border-color: var(--secondary-color) !important;
	}

	.dialog-btn-create {
		background: var(--accent-color) !important;
		border-color: var(--accent-color) !important;
	}

	.dialog-btn-delete {
		background-color: #f44336 !important;
		border-color: #f44336 !important;
		color: white !important;
		min-width: 100px;
		border-radius: 30px;
		padding: 0.5rem 1.25rem;
		margin-right: auto; /* Pushes other buttons to the right */
	}

		.dialog-btn-delete:hover {
			background-color: #d32f2f !important;
			border-color: #d32f2f !important;
		}

	.not-inserted-list {
		max-height: 300px;
		overflow-y: auto;
		margin: 1rem 0;
		border: 1px solid rgba(0, 0, 0, 0.08);
		border-radius: 8px;
	}

	.not-inserted-item {
		padding: 1rem;
		border-bottom: 1px solid rgba(0, 0, 0, 0.08);
	}

		.not-inserted-item:last-child {
			border-bottom: none;
		}

	.not-inserted-header {
		display: flex;
		justify-content: space-between;
		margin-bottom: 0.5rem;
		align-items: center;
	}

	.not-inserted-client {
		font-weight: 600;
		color: var(--dark-color);
	}

	.not-inserted-time {
		color: #666;
		font-size: 0.9rem;
	}

	.not-inserted-details {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.not-inserted-type, .not-inserted-trainers {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: #555;
		font-size: 0.85rem;
	}

	.reason-label {
		font-size: 0.85rem;
		color: var(--no-availability-color);
		padding-top: 0.25rem;
		font-style: italic;
	}

	.info-message {
		margin-bottom: 1rem;
		color: #555;
	}

	/* Voice Dialog Styles */
	.voice-dialog ::deep .e-dlg-header {
		padding: 0;
	}

	.voice-dialog ::deep .e-dlg-header-content {
		padding: 0;
	}

	.voice-dialog .dialog-header {
		background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
		color: white;
		padding: 1.25rem 1.5rem;
		border-top-left-radius: 8px;
		border-top-right-radius: 8px;
	}

		.voice-dialog .dialog-header .dialog-icon {
			fill: white;
		}

	.voice-dialog-body {
		padding: 0.5rem 0;
		display: flex;
		flex-direction: column;
		gap: 1.25rem;
		align-items: center;
	}

	.voice-transcript {
		width: 100%;
		border-radius: 8px;
	}

	.transcript-instructions {
		width: 100%;
		background-color: rgba(106, 17, 203, 0.05);
		border-radius: 8px;
		padding: 0.75rem 1.25rem;
		color: #555;
	}

		.transcript-instructions p {
			margin: 0 0 0.5rem 0;
			font-weight: 600;
			color: #6a11cb;
		}

		.transcript-instructions ul {
			margin: 0;
			padding-left: 1.5rem;
			font-size: 0.9rem;
		}

		.transcript-instructions li {
			margin-bottom: 0.25rem;
		}

	::deep .e-speech-mic-btn {
		background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%) !important;
		border-color: transparent !important;
		width: 50px;
		height: 50px;
		border-radius: 50% !important;
		display: flex;
		align-items: center;
		justify-content: center;
		box-shadow: 0 6px 16px rgba(106, 17, 203, 0.2);
		margin: 0.75rem 0;
	}

		::deep .e-speech-mic-btn:hover {
			box-shadow: 0 8px 20px rgba(106, 17, 203, 0.3);
			transform: translateY(-2px);
		}

	/* Footer */
	.sessions-footer {
		margin-top: auto;
		text-align: center;
		padding: 1rem;
		position: relative;
		z-index: 1;
	}

		.sessions-footer p {
			margin: 0;
			color: #777;
			font-size: 0.9rem;
		}

	.footer-link {
		color: var(--primary-color);
		text-decoration: none;
		font-weight: 500;
	}

		.footer-link:hover {
			color: var(--accent-color);
		}

	/* Responsive adjustments */
	@@media (max-width: 768px) {
		.sessions-container {
			padding: 1rem;
		}

		.header-content {
			flex-direction: column;
			gap: 1rem;
			align-items: flex-start;
		}

		.header-actions {
			width: 100%;
		}

		.page-title h1 {
			font-size: 1.5rem;
		}

		.card-section {
			padding: 1rem;
		}

		.sessions-grid {
			grid-template-columns: 1fr;
		}

		.feature-button {
			flex: 1;
			justify-content: center;
		}
	}
</style>