@page "/PeopleReport"

<PageTitle>People Report - Reflex and Reform Pilates</PageTitle>

<div class="reports-container">
	<div class="reports-overlay"></div>

	<!-- Header Section -->
	<div class="reports-header">
		<div class="header-content">
			<div class="page-title">
				<svg class="page-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
					<path d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z" />
				</svg>
				<h1>People Report</h1>
			</div>
			<div class="header-actions">
				<SfButton IconCss="e-icons e-arrow-left" OnClick="OnBackClick" Content="Back to Reports" CssClass="btn-back" />
			</div>
		</div>
	</div>

	<!-- Main Content -->
	<div class="reports-content">
		<!-- Summary Cards -->
		<div class="summary-cards">
			<div class="summary-card total-people">
				<div class="summary-icon">
					<svg class="feature-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z" />
					</svg>
				</div>
				<div class="summary-content">
					<h3>@(_personModels?.Count ?? 0)</h3>
					<p>Total Registered Clients</p>
				</div>
			</div>

			<div class="summary-card with-email">
				<div class="summary-icon">
					<svg class="feature-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z" />
					</svg>
				</div>
				<div class="summary-content">
					<h3>@CountClientsWithEmail()</h3>
					<p>Clients With Email</p>
				</div>
			</div>

			<div class="summary-card with-emergency">
				<div class="summary-icon">
					<svg class="feature-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z" />
					</svg>
				</div>
				<div class="summary-content">
					<h3>@CountClientsWithEmergencyContact()</h3>
					<p>With Emergency Contact</p>
				</div>
			</div>

			<div class="summary-card with-address">
				<div class="summary-icon">
					<svg class="feature-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z" />
					</svg>
				</div>
				<div class="summary-content">
					<h3>@CountClientsWithAddress()</h3>
					<p>With Address Details</p>
				</div>
			</div>
		</div>

		<!-- People Data Grid -->
		<div class="content-card">
			<div class="card-section">
				<h5 class="section-header">
					<svg class="section-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
						<path d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z" />
					</svg>
					Client Details
				</h5>
				<div class="section-content">
					<div class="grid-wrapper">
						<SfGrid DataSource="@_personModels" ID="_sfPersonGrid" @ref="_sfPersonGrid"
								AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowResizing="true" AllowExcelExport="true" 
								Toolbar="@(new List<string>() { "ExcelExport" })">

							<GridPageSettings PageSize="10" PageSizes="@_pageSizes"></GridPageSettings>

							<GridSortSettings AllowUnsort="true">
								<GridSortColumns>
									<GridSortColumn Field="Name" Direction="SortDirection.Ascending"></GridSortColumn>
								</GridSortColumns>
							</GridSortSettings>

							<GridEvents OnToolbarClick="ToolbarClickHandler" TValue="PersonModel"></GridEvents>

							<GridColumns>
								<GridColumn Field=@nameof(PersonModel.Id) HeaderText="ID" Width="80">
									<HeaderTemplate>
										<div class="column-header">
											<span>ID</span>
										</div>
									</HeaderTemplate>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.Name) HeaderText="Name" Width="180">
									<HeaderTemplate>
										<div class="column-header">
											<span>Client Name</span>
										</div>
									</HeaderTemplate>
									<Template>
										@{
											var data = (context as PersonModel);
											<div class="client-name-cell" @onclick="() => OpenPersonReport(data.Number)">
												<span class="client-name">@data.Name</span>
											</div>
										}
									</Template>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.Number) HeaderText="Phone" Width="140">
									<HeaderTemplate>
										<div class="column-header">
											<span>Phone Number</span>
										</div>
									</HeaderTemplate>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.Email) HeaderText="Email" Width="220">
									<HeaderTemplate>
										<div class="column-header">
											<span>Email Address</span>
										</div>
									</HeaderTemplate>
									<Template>
										@{
											var data = (context as PersonModel);
											<span class="@(string.IsNullOrEmpty(data.Email) ? "no-data" : "")">
												@(string.IsNullOrEmpty(data.Email) ? "Not provided" : data.Email)
											</span>
										}
									</Template>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.EmergencyName) HeaderText="Emergency Name" Width="180">
									<HeaderTemplate>
										<div class="column-header">
											<span>Emergency Contact</span>
										</div>
									</HeaderTemplate>
									<Template>
										@{
											var data = (context as PersonModel);
											<span class="@(string.IsNullOrEmpty(data.EmergencyName) ? "no-data" : "")">
												@(string.IsNullOrEmpty(data.EmergencyName) ? "Not provided" : data.EmergencyName)
											</span>
										}
									</Template>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.EmergencyNumber) HeaderText="Emergency Phone" Width="160">
									<HeaderTemplate>
										<div class="column-header">
											<span>Emergency Phone</span>
										</div>
									</HeaderTemplate>
									<Template>
										@{
											var data = (context as PersonModel);
											<span class="@(string.IsNullOrEmpty(data.EmergencyNumber) ? "no-data" : "")">
												@(string.IsNullOrEmpty(data.EmergencyNumber) ? "Not provided" : data.EmergencyNumber)
											</span>
										}
									</Template>
								</GridColumn>
								<GridColumn Field=@nameof(PersonModel.Address) HeaderText="Address" Width="250">
									<HeaderTemplate>
										<div class="column-header">
											<span>Address</span>
										</div>
									</HeaderTemplate>
									<Template>
										@{
											var data = (context as PersonModel);
											<span class="@(string.IsNullOrEmpty(data.Address) ? "no-data" : "")">
												@(string.IsNullOrEmpty(data.Address) ? "Not provided" : data.Address)
											</span>
										}
									</Template>
								</GridColumn>
							</GridColumns>
							<GridTemplates>
								<ToolbarTemplate>
									<div class="grid-toolbar">
										<button class="e-btn e-tbar-btn e-tbtn-txt e-control e-primary" type="button" id="export-excel">
											<span class="e-btn-icon e-icons e-export e-icon-left"></span>
											<span class="e-tbar-btn-text">Excel</span>
										</button>
										<button class="e-btn e-tbar-btn e-tbtn-txt e-control e-secondary" type="button" id="export-pdf">
											<span class="e-btn-icon e-icons e-export e-icon-left"></span>
											<span class="e-tbar-btn-text">PDF</span>
										</button>
										<button class="e-btn e-tbar-btn e-tbtn-txt e-control" type="button" id="print">
											<span class="e-btn-icon e-icons e-print e-icon-left"></span>
											<span class="e-tbar-btn-text">Print</span>
										</button>
									</div>
								</ToolbarTemplate>
							</GridTemplates>
						</SfGrid>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="reports-footer">
		<p>&copy; @DateTime.Now.Year A Product By <a href="https://aadisoft.vercel.app" target="_blank" class="footer-link">AadiSoft</a>. All rights reserved.</p>
	</div>
</div>

<style>
	:root {
		--primary-color: #3f51b5; /* Fitness blue/purple */
		--secondary-color: #8bc34a; /* Fresh green */
		--dark-color: #303030;
		--light-color: #f8f8f8;
		--accent-color: #ff5722; /* Energetic orange */
		--card-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
		--blue-color: #03a9f4; /* Person-specific theme */
	}

	body {
		margin: 0;
		padding: 0;
		font-family: 'Montserrat', 'Roboto', sans-serif;
	}

	.reports-container {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
		background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%233f51b5" fill-opacity="0.1" d="M0,224L48,218.7C96,213,192,203,288,213.3C384,224,480,256,576,261.3C672,267,768,245,864,208C960,171,1056,117,1152,106.7C1248,96,1344,128,1392,144L1440,160L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path></svg>');
		background-color: #f8f9fa;
		background-repeat: no-repeat;
		background-position: top;
		padding: 2rem;
		position: relative;
	}

	.reports-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: url('data:image/svg+xml;utf8,<svg width="20" height="20" xmlns="http://www.w3.org/2000/svg"><rect width="20" height="20" fill="none" stroke="%23000" stroke-opacity="0.03" stroke-width="1"/></svg>');
		opacity: 0.5;
		pointer-events: none;
		z-index: 0;
	}

	.reports-header {
		margin-bottom: 2rem;
		position: relative;
		z-index: 1;
	}

	.header-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.page-title {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	.page-icon {
		width: 40px;
		height: 40px;
		color: var(--blue-color);
		fill: currentColor;
		filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.1));
	}

	.page-title h1 {
		margin: 0;
		font-size: 2rem;
		font-weight: 700;
		color: var(--dark-color);
	}

	.reports-content {
		flex-grow: 1;
		position: relative;
		z-index: 1;
	}

	.content-card {
		background-color: white;
		border-radius: 16px;
		box-shadow: var(--card-shadow);
		overflow: hidden;
		margin-bottom: 2rem;
	}

	.card-section {
		padding: 2rem;
	}

	.section-header {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		margin: 0 0 1.5rem 0;
		font-size: 1.25rem;
		font-weight: 600;
		color: var(--dark-color);
	}

	.section-icon {
		width: 24px;
		height: 24px;
		color: var(--blue-color);
		fill: currentColor;
	}

	.header-actions {
		display: flex;
		align-items: center;
	}

	.btn-back {
		background: linear-gradient(135deg, #f5f5f5 0%, #e0e0e0 100%) !important;
		border-color: transparent !important;
		color: #555 !important;
		padding: 0.5rem 1.25rem;
		border-radius: 50px;
		font-weight: 500;
		display: flex;
		align-items: center;
		gap: 0.5rem;
		transition: all 0.3s ease;
		box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
	}

		.btn-back:hover {
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
			transform: translateY(-2px);
			background: linear-gradient(135deg, #e0e0e0 0%, #d0d0d0 100%) !important;
		}

	/* Grid Styling */
	.grid-wrapper {
		border-radius: 8px;
		overflow: hidden;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
	}

	::deep .e-grid {
		border: none;
		border-radius: 8px;
		font-family: 'Montserrat', 'Roboto', sans-serif;
	}

	::deep .e-gridheader {
		background-color: #f8f9fa;
		border-bottom: 2px solid rgba(3, 169, 244, 0.1);
	}

	::deep .e-headercell {
		background-color: #f8f9fa;
		color: var(--dark-color);
		font-weight: 600;
		border-right: 1px solid rgba(0, 0, 0, 0.05);
	}

	::deep .column-header {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0 0.25rem;
	}

	::deep .e-row {
		border: none;
	}

		::deep .e-row:hover {
			background-color: rgba(3, 169, 244, 0.05) !important;
		}

	::deep .e-altrow {
		background-color: rgba(248, 249, 250, 0.5);
	}

	::deep .e-rowcell {
		color: #333;
		border-right: 1px solid rgba(0, 0, 0, 0.05);
		border-bottom: 1px solid rgba(0, 0, 0, 0.05);
	}

	::deep .e-pager {
		background-color: #f8f9fa;
		border-top: 1px solid rgba(0, 0, 0, 0.05);
		padding: 0.75rem;
	}

	::deep .e-pagercontainer {
		border: none;
	}

	::deep .e-numericitem {
		border-radius: 4px;
	}

	::deep .e-currentitem {
		background-color: var(--blue-color);
		color: white;
	}

	/* Toolbar styling */
	::deep .e-toolbar {
		background-color: #f8f9fa;
		border-bottom: 1px solid rgba(0, 0, 0, 0.05);
		padding: 0.5rem;
	}

	.grid-toolbar {
		display: flex;
		gap: 0.75rem;
		padding: 0.5rem;
	}

	/* Empty field styling */
	.no-data {
		color: #9e9e9e;
		font-style: italic;
		font-size: 0.9rem;
	}

	/* Client name styling */
	.client-name-cell {
		cursor: pointer;
		position: relative;
	}

	.client-name {
		color: var(--blue-color);
		font-weight: 500;
		text-decoration: none;
		position: relative;
	}

		.client-name::after {
			content: '';
			position: absolute;
			bottom: -2px;
			left: 0;
			width: 0;
			height: 2px;
			background-color: var(--blue-color);
			transition: width 0.3s ease;
		}

	.client-name-cell:hover .client-name::after {
		width: 100%;
	}

	/* Summary Cards */
	.summary-cards {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
		gap: 1.5rem;
		margin-bottom: 2rem;
	}

	.summary-card {
		background-color: white;
		border-radius: 12px;
		box-shadow: var(--card-shadow);
		padding: 1.5rem;
		display: flex;
		align-items: center;
		gap: 1rem;
		position: relative;
		overflow: hidden;
	}

		.summary-card::before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			height: 100%;
			width: 6px;
		}

	.total-people::before {
		background: linear-gradient(to bottom, var(--blue-color), #4fc3f7);
	}

	.with-email::before {
		background: linear-gradient(to bottom, #9c27b0, #ce93d8);
	}

	.with-emergency::before {
		background: linear-gradient(to bottom, var(--secondary-color), #9ccc65);
	}

	.with-address::before {
		background: linear-gradient(to bottom, var(--accent-color), #ff8a65);
	}

	.summary-icon {
		width: 50px;
		height: 50px;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-shrink: 0;
	}

	.total-people .summary-icon {
		background-color: rgba(3, 169, 244, 0.1);
	}

	.with-email .summary-icon {
		background-color: rgba(156, 39, 176, 0.1);
	}

	.with-emergency .summary-icon {
		background-color: rgba(139, 195, 74, 0.1);
	}

	.with-address .summary-icon {
		background-color: rgba(255, 87, 34, 0.1);
	}

	.total-people .summary-icon svg {
		fill: var(--blue-color);
	}

	.with-email .summary-icon svg {
		fill: #9c27b0;
	}

	.with-emergency .summary-icon svg {
		fill: var(--secondary-color);
	}

	.with-address .summary-icon svg {
		fill: var(--accent-color);
	}

	.summary-content h3 {
		margin: 0;
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--dark-color);
	}

	.summary-content p {
		margin: 0.25rem 0 0;
		font-size: 0.85rem;
		color: #666;
	}

	.feature-icon {
		width: 28px;
		height: 28px;
		filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.1));
	}

	.reports-footer {
		margin-top: auto;
		text-align: center;
		padding: 1rem 0;
		position: relative;
		z-index: 1;
	}

		.reports-footer p {
			margin: 0;
			color: #777;
			font-size: 0.9rem;
		}

	.footer-link {
		color: var(--primary-color);
		text-decoration: none;
		font-weight: 500;
		transition: color 0.2s ease;
	}

		.footer-link:hover {
			color: var(--accent-color);
		}

	/* Responsive adjustments */
	@@media (max-width: 768px) {
		.reports-container {
			padding: 1.5rem 1rem;
		}

		.page-title h1 {
			font-size: 1.5rem;
		}

		.header-content {
			flex-direction: column;
			gap: 1rem;
			align-items: flex-start;
		}

		.card-section {
			padding: 1.5rem 1rem;
		}

		.summary-cards {
			grid-template-columns: 1fr;
		}

		::deep .e-toolbar {
			padding: 0.25rem;
		}

		.grid-toolbar {
			flex-wrap: wrap;
		}
	}
</style>